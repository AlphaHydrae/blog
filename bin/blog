#!/usr/bin/env ruby
require 'date'
require 'fileutils'
require 'i18n'

I18n.config.available_locales = :en

TODAY = {
  'tif' => 'found',
  'til' => 'learned'
}

TODAY_KEYS = TODAY.keys

action = ARGV.shift

today_type = nil
if TODAY_KEYS.include?(action)
  today_type = action
  action = 'post'
end

raise "Unsupported action #{action.inspect}" if action != 'post'

tags = ARGV[0].match(/\A[a-z0-9]+(?:-[a-z0-9]+)*(?:,|(?:,[a-z0-9]+(?:-[a-z0-9]+)*)+,?)\z/) ? ARGV.shift.gsub(/,\z/, '').split(/,/) : []

root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
drafts_dir = File.join(root, '_drafts')

title = ARGV.join(' ')
post_file_title = I18n.transliterate(
  title
  .gsub(/'/, ' ')
  .gsub(/[^ a-zA-Z0-9]/, '')
  .gsub(/ +/, '-')
  .gsub(/(?:\A-|-\z)/, '')
).downcase

now = DateTime.now
post_file_date = now.strftime('%Y-%m-%d')

post_file = File.join(drafts_dir, "#{post_file_date}-#{post_file_title}.md")
raise "Post #{post_file} already exists" if File.exists?(post_file)

frontmatter = {
  'layout' => 'post',
  'title' => title,
  'date' => now.strftime('%Y-%m-%d %H:%M:%S %z'),
  'comments' => true
}

if today_type
  frontmatter['today'] = {
    'type' => TODAY[today_type]
  }
end

frontmatter['categories'] = 'programming'
frontmatter['tags'] = tags.join(' ') unless tags.empty?

FileUtils.mkdir_p(drafts_dir)
File.open(post_file, 'w'){ |f| f.write "#{YAML.dump(frontmatter)}---\n\nHello Post"}

puts "Created draft post #{post_file}"
